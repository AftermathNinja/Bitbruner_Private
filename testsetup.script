servers0Port = read('servers0Port_list.txt').split(',');
servers1Port = read('servers1Port_list.txt').split(',');
servers2Port = read('servers2Port_list.txt').split(',');
servers3Port = read('servers3Port_list.txt').split(',');
servers4Port = read('servers4Port_list.txt').split(',');
servers5Port = read('servers5Port_list.txt').split(',');

var inRange = [];
var notinRange = [];
var isHacked = [];

var scriptRam = 2.75;
var script = 'level_3_hack.script';

for (i = 0; i < servers0Port.length; ++i) {
	var serv = servers0Port[i];
	var toHackLevel = getServerRequiredHackingLevel(serv);
	if (toHackLevel < getHackingLevel()) {
		var a = inRange.length;
		inRange[a] = serv;
	}
	else {
		var a = notinRange.length;
		notinRange[a] = serv;
	}
}

for (i = 0; i < servers1Port.length; ++i) {
	var serv = servers1Port[i];
	var toHackLevel = getServerRequiredHackingLevel(serv);
	if (toHackLevel < getHackingLevel()) {
		var a = inRange.length;
		inRange[a] = serv;
	}
	else {
		var a = notinRange.length;
		notinRange[a] = serv;
	}
}

for (i = 0; i < servers2Port.length; ++i) {
	var serv = servers2Port[i];
	var toHackLevel = getServerRequiredHackingLevel(serv);
	if (toHackLevel < getHackingLevel()) {
		var a = inRange.length;
		inRange[a] = serv;
	}
	else {
		var a = notinRange.length;
		notinRange[a] = serv;
	}
}

for (i = 0; i < servers3Port.length; ++i) {
	var serv = servers3Port[i];
	var toHackLevel = getServerRequiredHackingLevel(serv);
	if (toHackLevel < getHackingLevel()) {
		var a = inRange.length;
		inRange[a] = serv;
	}
	else {
		var a = notinRange.length;
		notinRange[a] = serv;
	}
}

for (i = 0; i < servers4Port.length; ++i) {
	var serv = servers4Port[i];
	var toHackLevel = getServerRequiredHackingLevel(serv);
	if (toHackLevel < getHackingLevel()) {
		var a = inRange.length;
		inRange[a] = serv;
	}
	else {
		var a = notinRange.length;
		notinRange[a] = serv;
	}
}

for (i = 0; i < servers5Port.length; ++i) {
	var serv = servers5Port[i];
	var toHackLevel = getServerRequiredHackingLevel(serv);
	if (toHackLevel < getHackingLevel()) {
		var a = inRange.length;
		inRange[a] = serv;
	}
	else {
		var a = notinRange.length;
		notinRange[a] = serv;
	}
}

// alert(inRange);
// alert(notinRange);
if (!fileExists('sqlinject.exe', 'home')) {
	sleep(300000);
}
else {
	for (i = 0; i < inRange.length; ++i) {
		var serv = inRange[i];
		var ram = getServerMaxRam(serv);
		var threads = Math.floor(ram / scriptRam);
		if (threads < 1 || serv == 'home') {
			null;
		}
		else if (getServerUsedRam != 0 && (!fileExists(script, serv) || !scriptRunning(script, serv))) {
			scp(script, serv);
			relaysmtp(serv);
			brutessh(serv);
			httpworm(serv);
			sqlinject(serv);
			ftpcrack(serv);
			nuke(serv);
			exec(script, serv, threads);
			//installBackdoor(serv); wont work till SF 4.1 is received
		}
	}
	while (notinRange !== 0) {
		for (i = 0; i < notinRange.length; ++i) {
			var serv = notinRange[i];
			var toHackLevel = getServerRequiredHackingLevel(serv);
			if (toHackLevel < getHackingLevel()) {
				notinRange[i] = null;
				if (getServerUsedRam != 0 && (!fileExists(script, serv) || !scriptRunning(script, serv))) {
					var ram = getServerMaxRam(serv);
					var threads = Math.floor(ram / scriptRam);
					if (threads < 1) {
						null;
					}
					else {
						scp(script, serv);
						relaysmtp(serv);
						brutessh(serv);
						httpworm(serv);
						sqlinject(serv);
						ftpcrack(serv);
						nuke(serv);
						exec(script, serv, threads);
						//installBackdoor(serv); wont work till SF 4.1 is received
					}
				}
			}
		}
		sleep(300000);
	}
}
	// alert('restart notinRange check');